{"version":3,"sources":["components/skelton.component.tsx","components/tag.component.tsx","article/article.component.tsx","article/index.ts","article/parse-articles.util.ts","router/routes.ts","router/router.tsx","router/index.ts","app/app.component.tsx","app/index.tsx","serviceWorker.ts","index.tsx"],"names":["Article","contentUrl","header","tags","description","onTagClick","style","props","Style","href","target","rel","NotFirstStyles","sort","map","tag","i","Tag","Component","key","value","onClick","Skeleton","width","args","InteractiveStyle","display","background","borderRadius","padding","marginRight","cursor","marginBottom","marginTop","parseArticles","text","values","extractArticle","articles","exec","article","url","split","push","Article_Component","Article_parseArticles","selectedTags","search","Array","from","join","AppRoute","Router","children","path","template","Header","sortedTags","useMemo","a","b","valueA","has","valueB","color","opacity","useHistory","query","URLSearchParams","useLocation","get","Set","filter","trim","useState","setArticles","console","log","useEffect","readmeMdUrl","fetch","response","redmeaMd","reduce","tagSet","filteredArticles","size","contains","length","selectTag","nextSelectedTags","create","toggleTag","selectedTag","flexDirection","alignItems","margin","App","Container","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.8f85f42d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport RLSkeleton from \"react-loading-skeleton\";\r\n\r\nexport namespace Skeleton {\r\n  export function Component() {\r\n    return (\r\n      <>\r\n        <RLSkeleton width=\"100%\" />\r\n        <RLSkeleton width=\"80%\" />\r\n        <RLSkeleton width=\"100%\" />\r\n        <RLSkeleton width=\"50%\" />\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nexport namespace Tag {\r\n  export function Component({ onClick, style, value, ...props }: Props) {\r\n    function handleClick(...args: any[]) {\r\n      if (onClick) {\r\n        onClick(value, ...args);\r\n      }\r\n    }\r\n\r\n    return (\r\n      <span\r\n        {...props}\r\n        onClick={handleClick}\r\n        style={{\r\n          ...Style,\r\n          ...(typeof onClick === \"function\" ? InteractiveStyle : {}),\r\n          ...style,\r\n        }}\r\n      >\r\n        {value}\r\n      </span>\r\n    );\r\n  }\r\n\r\n  export interface Props\r\n    extends React.DetailedHTMLProps<\r\n      React.HTMLAttributes<HTMLSpanElement>,\r\n      HTMLSpanElement\r\n    > {\r\n    value: any;\r\n    onClick?: (...params: any[]) => void;\r\n  }\r\n\r\n  export const Style = {\r\n    display: \"inline-block\",\r\n    background: \"#ddd\",\r\n    borderRadius: \".5em\",\r\n    padding: \"calc(.5em - 2px) .5em .5em .5em\",\r\n    marginRight: \".5em\",\r\n  };\r\n\r\n  export const InteractiveStyle = {\r\n    cursor: \"pointer\",\r\n  };\r\n}\r\n","import React from \"react\";\r\n\r\nimport { Tag } from \"components\";\r\n\r\nexport function Article({\r\n  contentUrl,\r\n  header,\r\n  tags,\r\n  description,\r\n  onTagClick,\r\n  style = {},\r\n  ...props\r\n}: Props) {\r\n  return (\r\n    <article {...props} style={{ ...Style, ...style }}>\r\n      <header>\r\n        <a href={contentUrl} target=\"_blank\" rel=\"noopener noreferrer\">\r\n          {header}\r\n        </a>\r\n      </header>\r\n      <div style={NotFirstStyles}>\r\n        {tags.sort().map((tag, i) => (\r\n          <Tag.Component key={`${i}_${tag}`} value={tag} onClick={onTagClick} />\r\n        ))}\r\n      </div>\r\n      {description && (\r\n        <div style={NotFirstStyles}>\r\n          <em>{description}</em>\r\n        </div>\r\n      )}\r\n    </article>\r\n  );\r\n}\r\n\r\nexport interface Props\r\n  extends React.DetailedHTMLProps<\r\n    React.HTMLAttributes<HTMLElement>,\r\n    HTMLElement\r\n  > {\r\n  contentUrl: string;\r\n  header: string;\r\n  tags: string[];\r\n  description?: string;\r\n  onTagClick: (tag: any) => void;\r\n}\r\n\r\nconst Style = { marginBottom: \"1.5em\" };\r\n\r\nconst NotFirstStyles = { marginTop: \".5em\" };\r\n","import {\r\n  Article as Article_Component,\r\n  Props as Article_Props,\r\n} from \"./article.component\";\r\nimport { Article as Article_Type } from \"./article.type\";\r\nimport { parseArticles as Article_parseArticles } from \"./parse-articles.util\";\r\n\r\nexport namespace Article {\r\n  export const Component = Article_Component;\r\n  export type Props = Article_Props;\r\n  export type Type = Article_Type;\r\n  export const parseArticles = Article_parseArticles;\r\n}\r\n","export function parseArticles(text: string) {\r\n  const extractArticle = /(?:### \\[(.+)\\])?\\((.+)\\)\\[(.+)\\](?:\\r\\n\\r\\n(.+))?/g;\r\n  const articles = [];\r\n  let values;\r\n  while ((values = extractArticle.exec(text)) !== null) {\r\n    const article = {\r\n      text: values[1],\r\n      url: values[2],\r\n      tags: values[3].split(\",\"),\r\n      description: values[4],\r\n    };\r\n    articles.push(article);\r\n  }\r\n  return articles;\r\n}\r\n","export namespace AppRoute {\r\n  export function create(selectedTags?: Set<string>, search?: string) {\r\n    return `/dev-howtos?selectedTags=${\r\n      selectedTags ? `${Array.from(selectedTags).join(\",\")}` : \"\"\r\n    }?search=${search ?? \"\"}`;\r\n  }\r\n  export const template = \"/dev-howtos\";\r\n}\r\n","import React from \"react\";\r\n\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\n\r\nimport { AppRoute } from \"./routes\";\r\n\r\nexport namespace Router {\r\n  export function Component({ children }: { children: JSX.Element }) {\r\n    return (\r\n      <BrowserRouter>\r\n        <Switch>\r\n          <Route path={AppRoute.template}>{children}</Route>\r\n        </Switch>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n","import { Router } from \"./router\";\r\n\r\nexport * from \"./routes\";\r\nexport default Router.Component;\r\n","import React, { useEffect, useMemo, useState } from \"react\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\n\r\nimport { Article } from \"article\";\r\nimport { Tag } from \"components\";\r\nimport { AppRoute } from \"router\";\r\n\r\nfunction useQuery() {\r\n  return new URLSearchParams(useLocation().search);\r\n}\r\n\r\nexport namespace App {\r\n  export function Container({ children }: ContainerProps) {\r\n    const { push } = useHistory();\r\n    const query = useQuery();\r\n    const { search, selectedTags } = useMemo(() => {\r\n      return {\r\n        search: query.get(\"search\"),\r\n        selectedTags: new Set<string>(\r\n          query\r\n            .get(\"selectedTags\")\r\n            ?.split(\",\")\r\n            .filter((tag) => tag.trim() !== \"\") ?? []\r\n        ),\r\n      };\r\n    }, [query]);\r\n    const [articles, setArticles] = useState<Article.Type[]>([]);\r\n\r\n    console.log(\"search\", search);\r\n\r\n    useEffect(() => {\r\n      (async function fetchReadmeMd() {\r\n        const readmeMdUrl =\r\n          process.env.NODE_ENV === \"development\"\r\n            ? \"/dev-howtos/README.md\"\r\n            : \"https://raw.githubusercontent.com/fea17e86/dev-howtos/master/README.md\";\r\n        console.log(readmeMdUrl);\r\n        const response = await fetch(readmeMdUrl);\r\n        const redmeaMd = await response.text();\r\n        setArticles(Article.parseArticles(redmeaMd));\r\n      })();\r\n    }, []);\r\n\r\n    const tags = useMemo(() => {\r\n      return articles.reduce(\r\n        (tagSet, { tags }) => new Set<string>([...Array.from(tagSet), ...tags]),\r\n        new Set<string>()\r\n      );\r\n    }, [articles]);\r\n\r\n    const filteredArticles = useMemo(\r\n      () =>\r\n        articles.filter(({ tags }) => {\r\n          if (selectedTags.size === 0) {\r\n            return true;\r\n          }\r\n\r\n          let contains: boolean = false;\r\n          let i: number = 0;\r\n          while (\r\n            (contains = selectedTags.has(tags[i])) === false &&\r\n            i < tags.length\r\n          ) {\r\n            i++;\r\n          }\r\n\r\n          return contains;\r\n        }),\r\n      [articles, selectedTags]\r\n    );\r\n\r\n    function selectTag(tag: string) {\r\n      const nextSelectedTags = new Set<string>([\r\n        ...Array.from(selectedTags),\r\n        tag,\r\n      ]);\r\n      push(AppRoute.create(nextSelectedTags));\r\n    }\r\n\r\n    function toggleTag(tag: string) {\r\n      let nextSelectedTags = selectedTags;\r\n      if (selectedTags.has(tag)) {\r\n        nextSelectedTags = new Set<string>([\r\n          ...Array.from(selectedTags).filter(\r\n            (selectedTag) => selectedTag !== tag\r\n          ),\r\n        ]);\r\n      } else {\r\n        nextSelectedTags = new Set<string>([...Array.from(selectedTags), tag]);\r\n      }\r\n      push(AppRoute.create(nextSelectedTags));\r\n    }\r\n\r\n    return children({\r\n      articles,\r\n      filteredArticles,\r\n      selectedTags,\r\n      selectTag,\r\n      tags,\r\n      toggleTag,\r\n    });\r\n  }\r\n\r\n  export interface ContainerProps {\r\n    children: (props: ComponentProps) => JSX.Element;\r\n  }\r\n\r\n  export function Component({\r\n    filteredArticles,\r\n    selectedTags,\r\n    selectTag,\r\n    tags,\r\n    toggleTag,\r\n  }: ComponentProps) {\r\n    return (\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"stretch\",\r\n          width: \"900px\",\r\n          margin: \"auto\",\r\n        }}\r\n      >\r\n        <Header\r\n          tags={tags}\r\n          selectedTags={selectedTags}\r\n          onTagClick={toggleTag}\r\n        />\r\n        <main>\r\n          {filteredArticles.map(\r\n            ({ url, text, tags, description }: Article.Type, i) => (\r\n              <Article.Component\r\n                key={`${i}_${url}`}\r\n                contentUrl={url}\r\n                header={text || url}\r\n                tags={tags}\r\n                description={description}\r\n                onTagClick={selectTag}\r\n              />\r\n            )\r\n          )}\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  export interface ComponentProps {\r\n    articles: Article.Type[];\r\n    filteredArticles: Article.Type[];\r\n    selectedTags: Set<string>;\r\n    selectTag: (tag: string) => void;\r\n    tags: Set<string>;\r\n    toggleTag: (tag: string) => void;\r\n  }\r\n\r\n  export function Header({ tags, selectedTags, onTagClick }: HeaderProps) {\r\n    const sortedTags = useMemo(() => {\r\n      return Array.from(tags).sort((a: string, b: string) => {\r\n        const valueA = selectedTags.has(a) ? 1 : 0;\r\n        const valueB = selectedTags.has(b) ? 1 : 0;\r\n        if (valueA !== valueB) {\r\n          return valueB - valueA;\r\n        }\r\n\r\n        if (a < b) {\r\n          return -1;\r\n        }\r\n        if (a > b) {\r\n          return 1;\r\n        }\r\n        return 0;\r\n      });\r\n    }, [tags, selectedTags]);\r\n    return (\r\n      <section style={{ marginBottom: \"2em\", marginTop: \"5em\" }}>\r\n        {sortedTags.map((tag, i) => (\r\n          <Tag.Component\r\n            key={`${i}_${tag}`}\r\n            value={tag}\r\n            onClick={onTagClick}\r\n            style={\r\n              selectedTags.has(tag)\r\n                ? { background: \"blue\", color: \"white\" }\r\n                : { opacity: 0.6 }\r\n            }\r\n          />\r\n        ))}\r\n      </section>\r\n    );\r\n  }\r\n\r\n  export interface HeaderProps {\r\n    onTagClick: (tag: any) => void;\r\n    selectedTags: Set<string>;\r\n    tags: Set<string>;\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nimport { App } from \"./app.component\";\r\n\r\nexport default () => {\r\n  return (\r\n    <App.Container>{(props) => <App.Component {...props} />}</App.Container>\r\n  );\r\n};\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"app\";\nimport Router from \"router\";\nimport * as serviceWorker from \"serviceWorker\";\n\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router children={<App />} />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}